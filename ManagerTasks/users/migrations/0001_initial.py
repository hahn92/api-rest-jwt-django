# Generated by Django 4.0.3 on 2022-04-10 15:31

from django.db import migrations, models
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Usernames.', max_length=50, unique=True, verbose_name='Username')),
                ('password', models.CharField(help_text='Las contrase침as sin procesar no se almacenan, por lo que no hay forma de ver la contrase침a de este usuario, pero puede cambiarla utilizando <a href="password/">este formulario</a>.', max_length=128, verbose_name='Password')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede iniciar sesi칩n en este sitio administrativo.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el usuario debe ser tratado como activo.Desmarque esta opci칩n en lugar de borrar la cuenta.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ('username',),
                'permissions': (('view_all_user', 'Can view all users'),),
            },
            managers=[
                ('objects', users.models.MyUserManager()),
            ],
        ),
    ]
